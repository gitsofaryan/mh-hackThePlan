{"version":3,"file":"envsafe.esm.js","sources":["../src/errors.ts","../src/freezeObject.ts","../src/reporter.ts","../src/envsafe.ts","../src/validators.ts"],"sourcesContent":["export class InvalidEnvError extends TypeError {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, InvalidEnvError.prototype);\n  }\n}\n\nexport const invalidEnvError = (type: string, input: unknown) =>\n  new InvalidEnvError(`Invalid ${type} input: \"${input}\"`);\n\nexport class MissingEnvError extends ReferenceError {\n  constructor(message?: string) {\n    super(message);\n\n    Object.setPrototypeOf(this, MissingEnvError.prototype);\n  }\n}\n","import { Environment } from './types';\n\nconst inspectables = [\n  'length',\n  'inspect',\n  'hasOwnProperty',\n  'toJSON',\n\n  // jest stuff:\n  'asymmetricMatch',\n  'nodeType',\n  '$$typeof',\n  'constructor',\n  '@@__IMMUTABLE_ITERABLE__@@',\n  '@@__IMMUTABLE_RECORD__@@',\n  '_isMockFunction',\n\n  // For libs that use `then` checks to see if objects are Promises\n  // https://github.com/af/envalid/issues/74\n  'then',\n  // For usage with TypeScript esModuleInterop flag\n  '__esModule',\n];\n\nexport function freezeObject<TCleanEnv extends Record<string, any>>(\n  envObj: TCleanEnv,\n  env: Environment,\n): Readonly<TCleanEnv> {\n  const frozen = Object.freeze ? Object.freeze(envObj) : envObj;\n\n  return global.Proxy\n    ? new Proxy(frozen, {\n        get(_target, name) {\n          // These checks are needed because calling console.log on a\n          // proxy that throws crashes the entire process. This whitelists\n          // the necessary properties for `console.log(frozen)`, `frozen.length`,\n          // `frozen.hasOwnProperty('string')` to work.\n\n          if (typeof name !== 'string' || inspectables.includes(name)) {\n            return (frozen as any)[name];\n          }\n\n          const varExists = frozen.hasOwnProperty(name);\n          if (!varExists) {\n            if (env.hasOwnProperty(name)) {\n              throw new ReferenceError(\n                `[envsafe] Env var ${String(\n                  name,\n                )} was accessed but not validated. This var is set in the environment; please add an envsafe validator for it.`,\n              );\n            }\n\n            throw new ReferenceError(\n              `[envsafe] Env var \"${String(name)}\" not found`,\n            );\n          }\n\n          return (frozen as any)[name];\n        },\n      })\n    : frozen;\n}\n","import { MissingEnvError } from './errors';\nimport { ReporterOpts } from './types';\n\nexport function defaultReporterText<TCleanEnv>({\n  errors,\n}: ReporterOpts<TCleanEnv>) {\n  const keys = Object.keys(errors);\n\n  const invalids: string[] = [];\n  const missing: string[] = [];\n\n  for (const key of keys) {\n    const err = errors[key];\n    if (err instanceof MissingEnvError) {\n      missing.push(`    ${key}: ${err.message || 'required'}`);\n    } else {\n      invalids.push(`    ${key}: ${err.message || 'invalid'}`);\n    }\n  }\n  if (invalids.length) {\n    invalids.unshift('‚ùå Invalid environment variables:');\n  }\n  if (missing.length) {\n    missing.unshift('üí® Missing environment variables:');\n  }\n\n  const output: string[] = [\n    '========================================',\n    ...invalids,\n    ...missing,\n    '========================================',\n  ];\n\n  return output.join('\\n');\n}\n\nexport function defaultReporter<TCleanEnv>(opts: ReporterOpts<TCleanEnv>) {\n  const text = defaultReporterText(opts);\n  console.error(text);\n\n  if (typeof window !== 'undefined' && window?.alert) {\n    window.alert(text);\n  }\n\n  throw new TypeError(text);\n}\n","import { InvalidEnvError, MissingEnvError } from './errors';\nimport { freezeObject } from './freezeObject';\nimport { defaultReporter } from './reporter';\nimport {\n  EnvsafeOpts,\n  Environment,\n  Errors,\n  ValidatorSpec,\n  Validators,\n} from './types';\n\nfunction getValueOrThrow<TValue>({\n  env,\n  validator,\n  key,\n}: {\n  env: Environment;\n  validator: ValidatorSpec<TValue>;\n  key: string;\n}): TValue {\n  const usingDevDefault = env.NODE_ENV !== 'production';\n  const { allowEmpty = false } = validator;\n\n  /**\n   * Function to see if the value isn't empty or undefined\n   */\n  function isSet(value: string | TValue | undefined): value is string | TValue {\n    if (!allowEmpty) {\n      return value !== undefined && value !== '';\n    }\n    return value !== undefined;\n  }\n\n  let input: string | TValue | undefined = isSet(validator.input)\n    ? validator.input\n    : env[key];\n\n  if (usingDevDefault && !isSet(input) && isSet(validator.devDefault)) {\n    input = validator.devDefault;\n  }\n  if (!isSet(input) && isSet(validator.default)) {\n    input = validator.default;\n  }\n\n  if (!isSet(input)) {\n    let errMessage = `Missing value`;\n    if (!validator.allowEmpty) {\n      errMessage += ' or empty string';\n    }\n    throw new MissingEnvError(errMessage);\n  }\n\n  const output = validator._parse(input);\n\n  if (validator.choices && !validator.choices.includes(output)) {\n    throw new InvalidEnvError(\n      `Value \"${output}\" not in choices [${validator.choices}]`,\n    );\n  }\n\n  return output;\n}\n\nexport function envsafe<TCleanEnv>(\n  validators: Validators<TCleanEnv>,\n  {\n    reporter = defaultReporter,\n    env = process.env,\n    strict = false,\n  }: EnvsafeOpts<TCleanEnv> = {},\n): Readonly<TCleanEnv> {\n  const errors: Errors = {};\n  const output = {} as TCleanEnv;\n\n  for (const key in validators) {\n    const validator = validators[key];\n    try {\n      const resolved = getValueOrThrow({ env, validator, key });\n      output[key] = resolved;\n    } catch (err) {\n      errors[key] = err;\n    }\n  }\n\n  if (Object.keys(errors).length) {\n    reporter({ errors, output, env });\n  }\n\n  return strict ? freezeObject(output, env) : output;\n}\n","import { invalidEnvError } from './errors';\nimport { Spec, ValidatorSpec } from './types';\nconst EMAIL_REGEX = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/; // intentionally non-exhaustive\n\nexport function makeValidator<TValue>(\n  parser: (input: string | TValue) => TValue,\n): (spec?: Spec<TValue>) => ValidatorSpec<TValue> {\n  return (spec = {}) => {\n    return {\n      ...spec,\n      _parse: parser,\n    };\n  };\n}\n\nexport const bool = makeValidator<boolean>(input => {\n  switch (input) {\n    case true:\n    case 'true':\n    case 't':\n    case '1':\n      return true;\n    case false:\n    case 'false':\n    case 'f':\n    case '0':\n      return false;\n    default:\n      throw invalidEnvError('str', input);\n  }\n});\n\nexport const str = makeValidator<string>(input => {\n  if (typeof input !== 'string') {\n    throw invalidEnvError('str', input);\n  }\n  return input;\n});\n\nexport const email = makeValidator<string>(input => {\n  if (!EMAIL_REGEX.test(input)) {\n    throw invalidEnvError('email', input);\n  }\n  return input;\n});\n\nexport const num = makeValidator<number>(input => {\n  const coerced = +input;\n  if (Number.isNaN(coerced)) {\n    throw invalidEnvError('num', input);\n  }\n  return coerced;\n});\n\nexport const port = makeValidator<number>(input => {\n  const coerced = +input;\n  if (\n    Number.isNaN(coerced) ||\n    `${coerced}` !== `${input}` ||\n    coerced % 1 !== 0 ||\n    coerced < 1 ||\n    coerced > 65535\n  ) {\n    throw invalidEnvError('port', input);\n  }\n  return coerced;\n});\n\nexport const url = makeValidator<string>(input => {\n  try {\n    new URL(input); // validate url\n    return input;\n  } catch (_) {\n    throw invalidEnvError('url', input);\n  }\n});\n\nexport const json = makeValidator<unknown>(input => {\n  try {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    return JSON.parse(input) as unknown;\n  } catch (e) {\n    throw invalidEnvError('json', input);\n  }\n});\n"],"names":["InvalidEnvError","message","Object","setPrototypeOf","prototype","TypeError","invalidEnvError","type","input","MissingEnvError","ReferenceError","inspectables","freezeObject","envObj","env","frozen","freeze","global","Proxy","get","_target","name","includes","varExists","hasOwnProperty","String","defaultReporterText","errors","keys","invalids","missing","key","err","push","length","unshift","output","join","defaultReporter","opts","text","console","error","window","alert","getValueOrThrow","validator","usingDevDefault","NODE_ENV","allowEmpty","isSet","value","undefined","devDefault","errMessage","_parse","choices","envsafe","validators","reporter","process","strict","resolved","EMAIL_REGEX","makeValidator","parser","spec","bool","str","email","test","num","coerced","Number","isNaN","port","url","URL","_","json","JSON","parse","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,eAAb;AAAA;;AACE,2BAAYC,OAAZ;;;AACE,kCAAMA,OAAN;AACAC,IAAAA,MAAM,CAACC,cAAP,gCAA4BH,eAAe,CAACI,SAA5C;;AACD;;AAJH;AAAA,iCAAqCC,SAArC;IAOaC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAeC,KAAf;AAAA,SAC7B,IAAIR,eAAJ,cAA+BO,IAA/B,kBAA+CC,KAA/C,QAD6B;AAAA;IAGlBC,eAAb;AAAA;;AACE,2BAAYR,OAAZ;;;AACE,wCAAMA,OAAN;AAEAC,IAAAA,MAAM,CAACC,cAAP,iCAA4BM,eAAe,CAACL,SAA5C;;AACD;;AALH;AAAA,iCAAqCM,cAArC;;ACRA,IAAMC,YAAY,GAAG,CACnB,QADmB,EAEnB,SAFmB,EAGnB,gBAHmB,EAInB,QAJmB;AAOnB,iBAPmB,EAQnB,UARmB,EASnB,UATmB,EAUnB,aAVmB,EAWnB,4BAXmB,EAYnB,0BAZmB,EAanB,iBAbmB;AAgBnB;AACA,MAjBmB;AAmBnB,YAnBmB,CAArB;AAsBA,SAAgBC,aACdC,QACAC;AAEA,MAAMC,MAAM,GAAGb,MAAM,CAACc,MAAP,GAAgBd,MAAM,CAACc,MAAP,CAAcH,MAAd,CAAhB,GAAwCA,MAAvD;AAEA,SAAOI,MAAM,CAACC,KAAP,GACH,IAAIA,KAAJ,CAAUH,MAAV,EAAkB;AAChBI,IAAAA,GADgB,eACZC,OADY,EACHC,IADG;AAEd;AACA;AACA;AACA;AAEA,UAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BV,YAAY,CAACW,QAAb,CAAsBD,IAAtB,CAAhC,EAA6D;AAC3D,eAAQN,MAAc,CAACM,IAAD,CAAtB;AACD;;AAED,UAAME,SAAS,GAAGR,MAAM,CAACS,cAAP,CAAsBH,IAAtB,CAAlB;;AACA,UAAI,CAACE,SAAL,EAAgB;AACd,YAAIT,GAAG,CAACU,cAAJ,CAAmBH,IAAnB,CAAJ,EAA8B;AAC5B,gBAAM,IAAIX,cAAJ,wBACiBe,MAAM,CACzBJ,IADyB,CADvB,kHAAN;AAKD;;AAED,cAAM,IAAIX,cAAJ,0BACkBe,MAAM,CAACJ,IAAD,CADxB,kBAAN;AAGD;;AAED,aAAQN,MAAc,CAACM,IAAD,CAAtB;AACD;AA3Be,GAAlB,CADG,GA8BHN,MA9BJ;AA+BD;;SC1DeW;MACdC,cAAAA;AAEA,MAAMC,IAAI,GAAG1B,MAAM,CAAC0B,IAAP,CAAYD,MAAZ,CAAb;AAEA,MAAME,QAAQ,GAAa,EAA3B;AACA,MAAMC,OAAO,GAAa,EAA1B;;AAEA,2BAAkBF,IAAlB,2BAAwB;AAAnB,QAAMG,GAAG,YAAT;AACH,QAAMC,GAAG,GAAGL,MAAM,CAACI,GAAD,CAAlB;;AACA,QAAIC,GAAG,YAAYvB,eAAnB,EAAoC;AAClCqB,MAAAA,OAAO,CAACG,IAAR,UAAoBF,GAApB,WAA4BC,GAAG,CAAC/B,OAAJ,IAAe,UAA3C;AACD,KAFD,MAEO;AACL4B,MAAAA,QAAQ,CAACI,IAAT,UAAqBF,GAArB,WAA6BC,GAAG,CAAC/B,OAAJ,IAAe,SAA5C;AACD;AACF;;AACD,MAAI4B,QAAQ,CAACK,MAAb,EAAqB;AACnBL,IAAAA,QAAQ,CAACM,OAAT,CAAiB,kCAAjB;AACD;;AACD,MAAIL,OAAO,CAACI,MAAZ,EAAoB;AAClBJ,IAAAA,OAAO,CAACK,OAAR,CAAgB,mCAAhB;AACD;;AAED,MAAMC,MAAM,IACV,0CADU,SAEPP,QAFO,EAGPC,OAHO,GAIV,0CAJU,EAAZ;AAOA,SAAOM,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAP;AACD;AAED,SAAgBC,gBAA2BC;;;AACzC,MAAMC,IAAI,GAAGd,mBAAmB,CAACa,IAAD,CAAhC;AACAE,EAAAA,OAAO,CAACC,KAAR,CAAcF,IAAd;;AAEA,MAAI,OAAOG,MAAP,KAAkB,WAAlB,gBAAiCA,MAAjC,qBAAiC,QAAQC,KAAzC,CAAJ,EAAoD;AAClDD,IAAAA,MAAM,CAACC,KAAP,CAAaJ,IAAb;AACD;;AAED,QAAM,IAAInC,SAAJ,CAAcmC,IAAd,CAAN;AACD;;AClCD,SAASK,eAAT;MACE/B,WAAAA;MACAgC,iBAAAA;MACAf,WAAAA;AAMA,MAAMgB,eAAe,GAAGjC,GAAG,CAACkC,QAAJ,KAAiB,YAAzC;8BAC+BF,UAAvBG;MAAAA,gDAAa;AAErB;;;;AAGA,WAASC,KAAT,CAAeC,KAAf;AACE,QAAI,CAACF,UAAL,EAAiB;AACf,aAAOE,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,EAAxC;AACD;;AACD,WAAOA,KAAK,KAAKC,SAAjB;AACD;;AAED,MAAI5C,KAAK,GAAgC0C,KAAK,CAACJ,SAAS,CAACtC,KAAX,CAAL,GACrCsC,SAAS,CAACtC,KAD2B,GAErCM,GAAG,CAACiB,GAAD,CAFP;;AAIA,MAAIgB,eAAe,IAAI,CAACG,KAAK,CAAC1C,KAAD,CAAzB,IAAoC0C,KAAK,CAACJ,SAAS,CAACO,UAAX,CAA7C,EAAqE;AACnE7C,IAAAA,KAAK,GAAGsC,SAAS,CAACO,UAAlB;AACD;;AACD,MAAI,CAACH,KAAK,CAAC1C,KAAD,CAAN,IAAiB0C,KAAK,CAACJ,SAAS,WAAV,CAA1B,EAA+C;AAC7CtC,IAAAA,KAAK,GAAGsC,SAAS,WAAjB;AACD;;AAED,MAAI,CAACI,KAAK,CAAC1C,KAAD,CAAV,EAAmB;AACjB,QAAI8C,UAAU,kBAAd;;AACA,QAAI,CAACR,SAAS,CAACG,UAAf,EAA2B;AACzBK,MAAAA,UAAU,IAAI,kBAAd;AACD;;AACD,UAAM,IAAI7C,eAAJ,CAAoB6C,UAApB,CAAN;AACD;;AAED,MAAMlB,MAAM,GAAGU,SAAS,CAACS,MAAV,CAAiB/C,KAAjB,CAAf;;AAEA,MAAIsC,SAAS,CAACU,OAAV,IAAqB,CAACV,SAAS,CAACU,OAAV,CAAkBlC,QAAlB,CAA2Bc,MAA3B,CAA1B,EAA8D;AAC5D,UAAM,IAAIpC,eAAJ,cACMoC,MADN,2BACiCU,SAAS,CAACU,OAD3C,OAAN;AAGD;;AAED,SAAOpB,MAAP;AACD;;AAED,SAAgBqB,QACdC;iCAK4B;6BAH1BC;MAAAA,uCAAWrB;wBACXxB;MAAAA,6BAAM8C,OAAO,CAAC9C;2BACd+C;MAAAA,mCAAS;;AAGX,MAAMlC,MAAM,GAAW,EAAvB;AACA,MAAMS,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAML,GAAX,IAAkB2B,UAAlB,EAA8B;AAC5B,QAAMZ,SAAS,GAAGY,UAAU,CAAC3B,GAAD,CAA5B;;AACA,QAAI;AACF,UAAM+B,QAAQ,GAAGjB,eAAe,CAAC;AAAE/B,QAAAA,GAAG,EAAHA,GAAF;AAAOgC,QAAAA,SAAS,EAATA,SAAP;AAAkBf,QAAAA,GAAG,EAAHA;AAAlB,OAAD,CAAhC;AACAK,MAAAA,MAAM,CAACL,GAAD,CAAN,GAAc+B,QAAd;AACD,KAHD,CAGE,OAAO9B,GAAP,EAAY;AACZL,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcC,GAAd;AACD;AACF;;AAED,MAAI9B,MAAM,CAAC0B,IAAP,CAAYD,MAAZ,EAAoBO,MAAxB,EAAgC;AAC9ByB,IAAAA,QAAQ,CAAC;AAAEhC,MAAAA,MAAM,EAANA,MAAF;AAAUS,MAAAA,MAAM,EAANA,MAAV;AAAkBtB,MAAAA,GAAG,EAAHA;AAAlB,KAAD,CAAR;AACD;;AAED,SAAO+C,MAAM,GAAGjD,YAAY,CAACwB,MAAD,EAAStB,GAAT,CAAf,GAA+BsB,MAA5C;AACD;;ACvFD,IAAM2B,WAAW,GAAG,4BAApB;;AAEA,SAAgBC,cACdC;AAEA,SAAO,UAACC,IAAD;QAACA;AAAAA,MAAAA,OAAO;;;AACb,wBACKA,IADL;AAEEX,MAAAA,MAAM,EAAEU;AAFV;AAID,GALD;AAMD;AAED,IAAaE,IAAI,gBAAGH,aAAa,CAAU,UAAAxD,KAAK;AAC9C,UAAQA,KAAR;AACE,SAAK,IAAL;AACA,SAAK,MAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACE,aAAO,IAAP;;AACF,SAAK,KAAL;AACA,SAAK,OAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACE,aAAO,KAAP;;AACF;AACE,YAAMF,eAAe,CAAC,KAAD,EAAQE,KAAR,CAArB;AAZJ;AAcD,CAfgC,CAA1B;AAiBP,IAAa4D,GAAG,gBAAGJ,aAAa,CAAS,UAAAxD,KAAK;AAC5C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAMF,eAAe,CAAC,KAAD,EAAQE,KAAR,CAArB;AACD;;AACD,SAAOA,KAAP;AACD,CAL+B,CAAzB;AAOP,IAAa6D,KAAK,gBAAGL,aAAa,CAAS,UAAAxD,KAAK;AAC9C,MAAI,CAACuD,WAAW,CAACO,IAAZ,CAAiB9D,KAAjB,CAAL,EAA8B;AAC5B,UAAMF,eAAe,CAAC,OAAD,EAAUE,KAAV,CAArB;AACD;;AACD,SAAOA,KAAP;AACD,CALiC,CAA3B;AAOP,IAAa+D,GAAG,gBAAGP,aAAa,CAAS,UAAAxD,KAAK;AAC5C,MAAMgE,OAAO,GAAG,CAAChE,KAAjB;;AACA,MAAIiE,MAAM,CAACC,KAAP,CAAaF,OAAb,CAAJ,EAA2B;AACzB,UAAMlE,eAAe,CAAC,KAAD,EAAQE,KAAR,CAArB;AACD;;AACD,SAAOgE,OAAP;AACD,CAN+B,CAAzB;AAQP,IAAaG,IAAI,gBAAGX,aAAa,CAAS,UAAAxD,KAAK;AAC7C,MAAMgE,OAAO,GAAG,CAAChE,KAAjB;;AACA,MACEiE,MAAM,CAACC,KAAP,CAAaF,OAAb,KACA,KAAGA,OAAH,UAAoBhE,KADpB,IAEAgE,OAAO,GAAG,CAAV,KAAgB,CAFhB,IAGAA,OAAO,GAAG,CAHV,IAIAA,OAAO,GAAG,KALZ,EAME;AACA,UAAMlE,eAAe,CAAC,MAAD,EAASE,KAAT,CAArB;AACD;;AACD,SAAOgE,OAAP;AACD,CAZgC,CAA1B;AAcP,IAAaI,GAAG,gBAAGZ,aAAa,CAAS,UAAAxD,KAAK;AAC5C,MAAI;AACF,QAAIqE,GAAJ,CAAQrE,KAAR,EADE;;AAEF,WAAOA,KAAP;AACD,GAHD,CAGE,OAAOsE,CAAP,EAAU;AACV,UAAMxE,eAAe,CAAC,KAAD,EAAQE,KAAR,CAArB;AACD;AACF,CAP+B,CAAzB;AASP,IAAauE,IAAI,gBAAGf,aAAa,CAAU,UAAAxD,KAAK;AAC9C,MAAI;AACF,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOA,KAAP;AACD;;AAED,WAAOwE,IAAI,CAACC,KAAL,CAAWzE,KAAX,CAAP;AACD,GAND,CAME,OAAO0E,CAAP,EAAU;AACV,UAAM5E,eAAe,CAAC,MAAD,EAASE,KAAT,CAArB;AACD;AACF,CAVgC,CAA1B;;;;"}